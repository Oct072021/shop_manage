<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.separate.fruit.Dao.OrderDao">
    <resultMap id="BaseResultMap1" type="com.separate.fruit.entity.Order">
        <id column="order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="order_count" jdbcType="INTEGER" property="orderCount"/>
        <result column="order_price" jdbcType="DOUBLE" property="orderPrice"/>
        <result column="order_address" jdbcType="VARCHAR" property="orderAddress"/>
        <collection property="goodsList" ofType="com.separate.fruit.entity.Goods">
            <id column="goods_id" jdbcType="INTEGER" property="goodsId"/>
            <result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
            <result column="goods_img" jdbcType="VARCHAR" property="goodsImg"/>
            <result column="price" jdbcType="DOUBLE" property="price"/>
            <result column="count" jdbcType="INTEGER" property="count"/>
            <result column="on_sale" jdbcType="VARCHAR" property="onSale"/>
        </collection>
        <collection property="usersList" ofType="com.separate.fruit.entity.Users">
            <id property="userId" column="user_id" jdbcType="INTEGER"></id>
            <result property="userName" column="user_name" jdbcType="VARCHAR"/>
            <result property="phone" column="phone" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <sql id="whereListOrder">
        <where>
            u.user_id = o.user_id
            and g.goods_id = o.goods_id
            <if test="shop != null">
                <if test="shop.userName != null">
                    and u.user_name like "%"#{shop.userName,jdbcType=VARCHAR}"%"
                </if>
                <if test="shop.goodsTypeId != null">
                    and g.goods_type = #{shop.goodsTypeId,jdbcType=INTEGER}
                </if>
                <if test="shop.goodsName != null">
                    and g.goods_name like "%"#{shop.goodsName,jdbcType=VARCHAR}"%"
                </if>
                <if test="shop.minPrice != null">
                    and g.price >= #{shop.minPrice,jdbcType=INTEGER}
                </if>
                <if test="shop.maxPrice != null">
                    and #{shop.maxPrice,jdbcType=INTEGER} >= g.price
                </if>
            </if>
        </where>
    </sql>


    <!-- 查询 -->
    <select id="listOrdersAll" parameterType="com.separate.fruit.entity.utils.poUtil" resultMap="BaseResultMap1">
        select
        o.order_id, o.order_price, o.order_count, o.order_address,
        g.*,
        u.user_id, u.user_name, u.phone
        from `order` o, goods g, users u
        <include refid="whereListOrder"></include>
        limit #{num,jdbcType=INTEGER}, #{size, jdbcType=INTEGER}
    </select>

    <!-- 查询出多少条数据 -->
    <select id="countOrder" parameterType="com.separate.fruit.entity.utils.poUtil" resultType="java.lang.Integer">
        select count(*)
        from users u, goods g, `order` o
        <include refid="whereListOrder"></include>
    </select>

    <!-- 找到对应数据 -->
    <select id="orderById" parameterType="java.lang.Integer" resultType="com.separate.fruit.entity.Order">
        select *
        from `order`
        where order_id = #{id,jdbcType=INTEGER}
    </select>
    <!-- 删除订单 -->
    <delete id="DeleteOrder" parameterType="java.lang.Integer">
        delete
        from `order`
        where order_id = #{id,jdbcType=INTEGER}
    </delete>
    <!-- 添加订单数据 -->
    <insert id="OrderAdd" parameterType="com.separate.fruit.entity.Order">
        insert into `order`
        (user_id, goods_id, order_count,
         order_price, order_address)
        values (#{userId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER},
                #{orderCount,jdbcType=INTEGER},
                #{orderPrice,jdbcType=DOUBLE},
                #{orderAddress,jdbcType=VARCHAR})
    </insert>

    <!-- 更改订单表 -->
    <update id="updateOrderById" parameterType="com.separate.fruit.entity.Order">
        update `order` o, goods g
        set
        <if test="userId != null">
            o.user_id = #{userId,jdbcType=INTEGER},
        </if>
        <if test="orderAddress != null">
            order_address = #{orderAddress,jdbcType=VARCHAR},
        </if>
        <if test="orderCount != null and goodsId != null">
            o.goods_id = #{goodsId,jdbcType=INTEGER},
            o.order_count = #{orderCount,jdbcType=INTEGER},
            o.order_price = #{orderCount,jdbcType=INTEGER} * g.price
        </if>
        where
        o.order_id = #{orderId,jdbcType=INTEGER}
        and g.goods_id = #{goodsId,jdbcType=INTEGER}
    </update>
</mapper>